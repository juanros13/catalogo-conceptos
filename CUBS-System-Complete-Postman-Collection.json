{
  "info": {
    "name": "CUBS System - Complete API Collection",
    "description": "Colecci√≥n completa para todos los microservicios del sistema CUBS (Cat√°logo √önico de Bienes y Servicios) del Gobierno de Tabasco",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string",
      "description": "Gateway URL base"
    },
    {
      "key": "authServiceUrl",
      "value": "http://localhost:8081",
      "type": "string",
      "description": "Auth Service direct URL"
    },
    {
      "key": "technicalConceptUrl",
      "value": "http://localhost:8083",
      "type": "string",
      "description": "Technical Concept Service direct URL"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string",
      "description": "JWT Access Token"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string",
      "description": "JWT Refresh Token"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication Service",
      "description": "Endpoints del servicio de autenticaci√≥n con Keycloak",
      "item": [
        {
          "name": "üîì Public Endpoints",
          "item": [
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Guardar tokens autom√°ticamente despu√©s del login exitoso",
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.success && response.accessToken) {",
                      "        pm.collectionVariables.set('accessToken', response.accessToken);",
                      "        pm.collectionVariables.set('refreshToken', response.refreshToken);",
                      "        console.log('‚úÖ Tokens guardados autom√°ticamente');",
                      "        console.log('üîë Access Token: ' + response.accessToken.substring(0, 50) + '...');",
                      "        console.log('‚è∞ Expires in: ' + response.expiresIn + ' seconds');",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"juanros13@gmail.com\",\n  \"password\": \"123456\"\n}"
                },
                "url": {
                  "raw": "{{authServiceUrl}}/auth/login",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "login"]
                },
                "description": "Autenticaci√≥n con email y password via Keycloak"
              }
            },
            {
              "name": "Health Check",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{authServiceUrl}}/auth/health",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "health"]
                },
                "description": "Verificar estado del servicio de autenticaci√≥n"
              }
            },
            {
              "name": "Service Info",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{authServiceUrl}}/auth/info",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "info"]
                },
                "description": "Informaci√≥n del servicio de autenticaci√≥n"
              }
            }
          ]
        },
        {
          "name": "üîí Protected Endpoints",
          "item": [
            {
              "name": "User Profile",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "// Verificar que tenemos un access token",
                      "const token = pm.collectionVariables.get('accessToken');",
                      "if (!token) {",
                      "    console.log('‚ùå No hay access token. Ejecuta el endpoint Login primero.');",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{authServiceUrl}}/auth/profile",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "profile"]
                },
                "description": "Obtener perfil del usuario autenticado"
              }
            },
            {
              "name": "Validate Token",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{authServiceUrl}}/auth/validate-token",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "validate-token"]
                },
                "description": "Validar token JWT actual"
              }
            },
            {
              "name": "Logout",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{authServiceUrl}}/auth/logout",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "logout"]
                },
                "description": "Cerrar sesi√≥n del usuario"
              }
            }
          ]
        },
        {
          "name": "üìä Actuator Endpoints",
          "item": [
            {
              "name": "Application Health",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{authServiceUrl}}/actuator/health",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["actuator", "health"]
                },
                "description": "Estado de salud del servicio auth"
              }
            },
            {
              "name": "Application Info",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{authServiceUrl}}/actuator/info",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["actuator", "info"]
                },
                "description": "Informaci√≥n de la aplicaci√≥n auth"
              }
            },
            {
              "name": "Metrics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{authServiceUrl}}/actuator/metrics",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["actuator", "metrics"]
                },
                "description": "M√©tricas del servicio auth"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìã Technical Concept Service",
      "description": "Endpoints del servicio de conceptos t√©cnicos CUBS",
      "item": [
        {
          "name": "üìù Concept Management",
          "item": [
            {
              "name": "Create Concept",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "// Verificar que tenemos un access token",
                      "const token = pm.collectionVariables.get('accessToken');",
                      "if (!token) {",
                      "    console.log('‚ùå No hay access token. Ejecuta el endpoint Login primero.');",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nombre\": \"Concepto de Prueba\",\n  \"descripcionDetallada\": \"Descripci√≥n detallada del concepto de prueba para CGMAIG\",\n  \"capitulo\": 5000,\n  \"areaFacultada\": \"CGMAIG\",\n  \"partidasPermitidas\": [\"5100\", \"5200\", \"5300\"],\n  \"motivoCreacion\": \"Creaci√≥n de concepto para pruebas del sistema\"\n}"
                },
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts"]
                },
                "description": "Crear un nuevo concepto t√©cnico (requiere rol VALIDADOR_TECNICO_*)"
              }
            },
            {
              "name": "Get All Concepts",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts"]
                },
                "description": "Obtener todos los conceptos activos"
              }
            },
            {
              "name": "Get Concepts by Chapter",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts?capitulo=5000",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts"],
                  "query": [
                    {
                      "key": "capitulo",
                      "value": "5000",
                      "description": "Filtrar por cap√≠tulo"
                    }
                  ]
                },
                "description": "Obtener conceptos filtrados por cap√≠tulo"
              }
            },
            {
              "name": "Get Concept by ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts/{{conceptId}}",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts", "{{conceptId}}"],
                  "variable": [
                    {
                      "key": "conceptId",
                      "value": "707e7b06-dbcc-489e-8c01-a2f5054e499f",
                      "description": "UUID del concepto"
                    }
                  ]
                },
                "description": "Obtener un concepto espec√≠fico por su ID"
              }
            },
            {
              "name": "Update Concept",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nombre\": \"Concepto Actualizado\",\n  \"descripcionDetallada\": \"Descripci√≥n actualizada del concepto\",\n  \"partidasPermitidas\": [\"5100\", \"5200\", \"5300\", \"5400\"],\n  \"motivoCambio\": \"Actualizaci√≥n para incluir m√°s partidas\"\n}"
                },
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts/{{conceptId}}",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts", "{{conceptId}}"],
                  "variable": [
                    {
                      "key": "conceptId",
                      "value": "707e7b06-dbcc-489e-8c01-a2f5054e499f",
                      "description": "UUID del concepto a actualizar"
                    }
                  ]
                },
                "description": "Actualizar un concepto existente"
              }
            },
            {
              "name": "Deactivate Concept",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts/{{conceptId}}?motivo=Concepto obsoleto",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts", "{{conceptId}}"],
                  "query": [
                    {
                      "key": "motivo",
                      "value": "Concepto obsoleto",
                      "description": "Motivo de la inactivaci√≥n"
                    }
                  ],
                  "variable": [
                    {
                      "key": "conceptId",
                      "value": "707e7b06-dbcc-489e-8c01-a2f5054e499f",
                      "description": "UUID del concepto a inactivar"
                    }
                  ]
                },
                "description": "Inactivar un concepto (baja l√≥gica)"
              }
            },
            {
              "name": "Reactivate Concept",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts/{{conceptId}}/reactivate?motivo=Concepto requerido nuevamente",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts", "{{conceptId}", "reactivate"],
                  "query": [
                    {
                      "key": "motivo",
                      "value": "Concepto requerido nuevamente",
                      "description": "Motivo de la reactivaci√≥n"
                    }
                  ],
                  "variable": [
                    {
                      "key": "conceptId",
                      "value": "707e7b06-dbcc-489e-8c01-a2f5054e499f",
                      "description": "UUID del concepto a reactivar"
                    }
                  ]
                },
                "description": "Reactivar un concepto previamente inactivado"
              }
            }
          ]
        },
        {
          "name": "üîç Advanced Search",
          "item": [
            {
              "name": "Search with Filters",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts/search?capitulo=5000&areaFacultada=CGMAIG&estado=ACTIVO&activo=true&searchTerm=concepto&page=0&size=10",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts", "search"],
                  "query": [
                    {
                      "key": "capitulo",
                      "value": "5000",
                      "description": "Filtrar por cap√≠tulo"
                    },
                    {
                      "key": "areaFacultada",
                      "value": "CGMAIG",
                      "description": "Filtrar por √°rea facultada"
                    },
                    {
                      "key": "estado",
                      "value": "ACTIVO",
                      "description": "Filtrar por estado"
                    },
                    {
                      "key": "activo",
                      "value": "true",
                      "description": "Filtrar por activo/inactivo"
                    },
                    {
                      "key": "searchTerm",
                      "value": "concepto",
                      "description": "T√©rmino de b√∫squeda en nombre o descripci√≥n"
                    },
                    {
                      "key": "page",
                      "value": "0",
                      "description": "P√°gina (0-indexed)"
                    },
                    {
                      "key": "size",
                      "value": "10",
                      "description": "Elementos por p√°gina"
                    }
                  ]
                },
                "description": "B√∫squeda avanzada con filtros m√∫ltiples y paginaci√≥n"
              }
            },
            {
              "name": "Get My Area Concepts",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts/my-area?page=0&size=20",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts", "my-area"],
                  "query": [
                    {
                      "key": "page",
                      "value": "0",
                      "description": "P√°gina"
                    },
                    {
                      "key": "size",
                      "value": "20",
                      "description": "Elementos por p√°gina"
                    }
                  ]
                },
                "description": "Obtener conceptos del √°rea del usuario autenticado"
              }
            }
          ]
        },
        {
          "name": "üìä Health & Monitoring",
          "item": [
            {
              "name": "Service Health",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{technicalConceptUrl}}/actuator/health",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["actuator", "health"]
                },
                "description": "Estado de salud del servicio t√©cnico"
              }
            },
            {
              "name": "Service Info",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{technicalConceptUrl}}/actuator/info",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["actuator", "info"]
                },
                "description": "Informaci√≥n del servicio t√©cnico"
              }
            },
            {
              "name": "Service Metrics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{technicalConceptUrl}}/actuator/metrics",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["actuator", "metrics"]
                },
                "description": "M√©tricas del servicio t√©cnico"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üåê Gateway Service",
      "description": "Endpoints a trav√©s del API Gateway (cuando est√© disponible)",
      "item": [
        {
          "name": "üîê Auth via Gateway",
          "item": [
            {
              "name": "Login via Gateway",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"juanros13@gmail.com\",\n  \"password\": \"123456\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                },
                "description": "Login a trav√©s del Gateway (Puerto 8080)"
              }
            },
            {
              "name": "Profile via Gateway",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/auth/profile",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "profile"]
                },
                "description": "Perfil de usuario a trav√©s del Gateway"
              }
            }
          ]
        },
        {
          "name": "üìã Concepts via Gateway",
          "item": [
            {
              "name": "Get Concepts via Gateway",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/concepts/api/general-concepts",
                  "host": ["{{baseUrl}}"],
                  "path": ["concepts", "api", "general-concepts"]
                },
                "description": "Conceptos a trav√©s del Gateway (ruta concepts/**)"
              }
            },
            {
              "name": "Create Concept via Gateway",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nombre\": \"Concepto via Gateway\",\n  \"descripcionDetallada\": \"Concepto creado a trav√©s del Gateway\",\n  \"capitulo\": 5000,\n  \"areaFacultada\": \"CGMAIG\",\n  \"partidasPermitidas\": [\"5100\"],\n  \"motivoCreacion\": \"Prueba via Gateway\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/concepts/api/general-concepts",
                  "host": ["{{baseUrl}}"],
                  "path": ["concepts", "api", "general-concepts"]
                },
                "description": "Crear concepto a trav√©s del Gateway"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üß™ Test Scenarios",
      "description": "Escenarios de prueba y casos de uso comunes",
      "item": [
        {
          "name": "üîÑ Complete Flow Test",
          "item": [
            {
              "name": "1. Login and Store Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Login successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.success).to.be.true;",
                      "    pm.expect(response.accessToken).to.exist;",
                      "    pm.collectionVariables.set('accessToken', response.accessToken);",
                      "    console.log('‚úÖ Token guardado para siguiente request');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"juanros13@gmail.com\",\n  \"password\": \"123456\"\n}"
                },
                "url": {
                  "raw": "{{authServiceUrl}}/auth/login",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "login"]
                }
              }
            },
            {
              "name": "2. Validate Token Works",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Token is valid', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.success).to.be.true;",
                      "    console.log('‚úÖ Token v√°lido confirmado');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{authServiceUrl}}/auth/validate-token",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "validate-token"]
                }
              }
            },
            {
              "name": "3. Create Test Concept",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Concept created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.id).to.exist;",
                      "    pm.expect(response.nombre).to.equal('Test Automation Concept');",
                      "    pm.collectionVariables.set('testConceptId', response.id);",
                      "    console.log('‚úÖ Concepto creado con ID: ' + response.id);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nombre\": \"Test Automation Concept\",\n  \"descripcionDetallada\": \"Concepto creado autom√°ticamente para pruebas\",\n  \"capitulo\": 5000,\n  \"areaFacultada\": \"CGMAIG\",\n  \"partidasPermitidas\": [\"5100\", \"5200\"],\n  \"motivoCreacion\": \"Prueba automatizada del flujo completo\"\n}"
                },
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts"]
                }
              }
            },
            {
              "name": "4. Verify Concept Exists",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Concept retrieved successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.id).to.equal(pm.collectionVariables.get('testConceptId'));",
                      "    pm.expect(response.nombre).to.equal('Test Automation Concept');",
                      "    console.log('‚úÖ Concepto verificado exitosamente');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts/{{testConceptId}}",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts", "{{testConceptId}}"]
                }
              }
            }
          ]
        },
        {
          "name": "‚ùå Error Scenarios",
          "item": [
            {
              "name": "Invalid Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Invalid login rejected', function () {",
                      "    pm.response.to.have.status(401);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.success).to.be.false;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"invalid@email.com\",\n  \"password\": \"wrongpassword\"\n}"
                },
                "url": {
                  "raw": "{{authServiceUrl}}/auth/login",
                  "host": ["{{authServiceUrl}}"],
                  "path": ["auth", "login"]
                }
              }
            },
            {
              "name": "Concept Without Token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Request without token rejected', function () {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts"]
                }
              }
            },
            {
              "name": "Invalid Concept Data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Invalid data rejected', function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{accessToken}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nombre\": \"\",\n  \"capitulo\": \"invalid\",\n  \"areaFacultada\": \"INVALID_AREA\"\n}"
                },
                "url": {
                  "raw": "{{technicalConceptUrl}}/api/general-concepts",
                  "host": ["{{technicalConceptUrl}}"],
                  "path": ["api", "general-concepts"]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('üöÄ Ejecutando request a: ' + request.url);",
          "",
          "// Check if we need auth token for this request",
          "if (request.url.includes('/api/general-concepts') && request.method !== 'GET') {",
          "    const token = pm.collectionVariables.get('accessToken');",
          "    if (!token) {",
          "        console.warn('‚ö†Ô∏è Este endpoint requiere autenticaci√≥n. Ejecuta Login primero.');",
          "    }",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Log response details",
          "console.log('üìä Response Status: ' + pm.response.status);",
          "console.log('‚è±Ô∏è Response Time: ' + pm.response.responseTime + 'ms');"
        ]
      }
    }
  ]
}